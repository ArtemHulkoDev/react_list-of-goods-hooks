{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","changeReverse","NONE","sortType","changeType","visibleGoods","goods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isSorted","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA+BF,mBAASH,EAASM,MAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA9BD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKP,EAASc,QACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAITb,GACFK,EAAaS,UAGRT,EAOcU,CACnBlB,EAAiB,CAAEG,aAAYG,aAG3Ba,EAAWb,IAAaP,EAASM,MAAQF,EAE/C,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAaP,EAASc,UAEtCU,QAAS,kBAAMhB,EAAWR,EAASc,UAPrC,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAaP,EAASgB,SAEtCQ,QAAS,kBAAMhB,EAAWR,EAASgB,SAPrC,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAanB,IAEjBoB,QAAS,kBAAMnB,GAAeD,IAPhC,qBAYCgB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAWR,EAASM,MACpBD,GAAc,IALlB,sBAaJ,6BACE,6BACGI,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCvHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.87b4ac1e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, changeReverse] = useState(false);\n  const [sortType, changeType] = useState(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  const isSorted = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={() => changeType(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => changeType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => changeReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isSorted && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              changeType(SortType.NONE);\n              changeReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}